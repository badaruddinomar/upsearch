version: "3.9"
services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --loglevel warning
    volumes:
      - ./docker-volumes/cache:/data

  mongodb:
    container_name: mongodb_container
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./docker-volumes/data:/data/db

  mysql:
    container_name: mysql_container
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: upsearch_auth
      MYSQL_USER: upsearch
      MYSQL_PASSWORD: upsearch_password
    ports:
      - "3306:3306"
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql

  postgres:
    container_name: postgres_container
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: upsearch
      POSTGRES_PASSWORD: upsearch_password
      POSTGRES_DB: upsearch_reviews
    ports:
      - "5432:5432"
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgresql/data

  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.13-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./docker-volumes/rabbitmq:/var/lib/rabbitmq

  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:9.1.3
    restart: always
    environment:
      ES_JAVA_OPTS: -Xmx1g -Xms1g
      bootstrap.memory_lock: "true"
      discovery.type: "single-node"
      xpack.security.enabled: "false"
      xpack.monitoring.collection.enabled: "true"
      # Remove these two lines:
      # xpack.security.authc.api_key.enabled: "true"
      # xpack.security.enrollment.enabled: "true"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic

  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:9.1.3
    restart: always
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch_container:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    networks:
      - elastic

networks:
  elastic:
    name: elastic
# Note: For production use, consider adding proper user authentication and security settings.

# docker compose up -d redis mongodb mysql postgres rabbitmq elasticsearch kibana

# 32
